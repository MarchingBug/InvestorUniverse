@model  PagedList.IPagedList<InvestorUniverse.Models.Investor>
@using System.Data.SqlClient
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" />
@{
    ViewBag.Title = "Investors";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("New Investor", "Create")
</p>

@using (Html.BeginForm("Index","Investors",FormMethod.Get))
{
    <p>
        <div class="col-md-1">
            Search :
        </div>
            <div class="col-md-3">
                 @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })
            </div>

        <div class="col-md-1">
            <input type="submit" class="btn btn-default" value="Search"/>
            <br/><br/>
        </div>
       
</p>
}

<table class="table table-striped table-condensed table-hover">

<tr>
    <th class="nowrap"></th>
    <th class="nowrap">
        @Html.ActionLink("Name", "Index", new {sortOrder = String.Concat("Name ", String.IsNullOrEmpty(ViewBag.sortOrderParam) ? "" : ViewBag.sortOrderParam), currentFilter = ViewBag.CurrentFilter})
    </th>
    <th class="nowrap">
        Address
    </th>
    <th class="nowrap">
        Address
    </th>
    <th class="nowrap">
        City
    </th>
    <th class="nowrap">
        @Html.ActionLink("State", "Index", new {sortOrder = String.Concat("State ", String.IsNullOrEmpty(ViewBag.sortOrderParam) ? "" : ViewBag.sortOrderParam), currentFilter = ViewBag.CurrentFilter})

    </th>
    <th class="nowrap">
        Zip Code
    </th>
    <th class="nowrap">
        Website
    </th>
    <th class="nowrap">
        Email
    </th>
    <th class="nowrap">
        Phone
    </th>
    <th class="nowrap">
        Fax
    </th>
    <th class="nowrap">
        Funds under Mgmt MN
    </th>
    <th class="nowrap">
        Funds under Mgmt mn USD
    </th>
    <th class="nowrap">
        Funds under Mgmt mn EUR
    </th>
    <th class="nowrap">
        Current Allocation to PE
    </th>
    <th class="nowrap">
        Current Allocation to PE mn USD
    </th>
    <th class="nowrap">
        Current Allocation to PE mn EUR
    </th>
    <th class="nowrap">
        Target Allocation to PE
    </th>
    <th class="nowrap">
        Target Allocation to PE mn USD
    </th>
    <th class="nowrap">
        Target Allocation to PE mn EUR
    </th>
    <th class="nowrap">
        Separate Accounts Committed Capital
    </th>
    <th class="nowrap">
        Separate Accounts Committed Capital USD
    </th>
    <th class="nowrap">
        Separate Accounts Committed Capital EUR
    </th>
    <th class="nowrap">
        Typical Investment Size mn
    </th>
    <th class="nowrap">
        Fund Preferences
    </th>
    <th class="nowrap">
        Geographic Preferences
    </th>
    <th class="nowrap">
        First Close Investor
    </th>
    <th class="nowrap">
        Co Invest with GP
    </th>
    <th class="nowrap">
        Next 12 Months Amount min mn
    </th>
    <th class="nowrap">
        Next 12 Months Amount max mn
    </th>
    <th class="nowrap">
        Next 12 Months Amount mn min
    </th>
    <th class="nowrap">
        Next 12 Months Amount mn max
    </th>
    <th class="nowrap">
        Next 12 Months Number of Funds min
    </th>
    <th class="nowrap">
        Next 12 Months Number of Funds max
    </th>
    <th class="nowrap">
        Next 12 Months Fund Type Preferences
    </th>
    <th class="nowrap">
        Date of 12 Month Plan
    </th>
    <th class="nowrap">
        General Consultants
    </th>
    <th class="nowrap">
        Private Equity Consultants
    </th>
    <th class="nowrap">
        Abbott Person
    </th>
    <th class="nowrap">
        Coinvestments
    </th>
    <th class="nowrap">
        CompanyType
    </th>
    <th class="nowrap">
        Country.Country1
    </th>

    <th class="nowrap">
        First Close
    </th>
    <th class="nowrap">
        First Time
    </th>
    <th class="nowrap">
        Meeting Frequency
    </th>
    <th class="nowrap">
        PE Investing
    </th>
    <th class="nowrap">
        Priority
    </th>
    <th class="nowrap">
        Region
    </th>
    <th class="nowrap">
        RFP Out Come
    </th>
    <th class="nowrap">
        Separate Account
    </th>
    <th class="nowrap">
        Stage
    </th>

</tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address2)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Zip_Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Web)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Tel)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Fax)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Funds_under_Mgmt__mn_)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Funds_under_Mgmt__mn_USD_)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Funds_under_Mgmt__mn_EUR_)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Current_Allocation_to_PE____)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Current_Allocation_to_PE__mn_USD_)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Current_Allocation_to_PE__mn_EUR_)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Target_Allocation_to_PE____)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Target_Allocation_to_PE__mn_USD_)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Target_Allocation_to_PE__mn_EUR_)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Separate_Accounts_Committed_Capital___)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Separate_Accounts_Committed_Capital_USD_)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Separate_Accounts_Committed_Capital_EUR_)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Typical_Investment_Size__mn_)
                </td>
                <td>

                    @if (item.Fund_Preferences != null && item.Fund_Preferences.ToString().Length != 0)
                    {
                        <div style="height: 100px; overflow-y: auto;">
                            @Html.DisplayFor(modelItem => item.Fund_Preferences)
                        </div>
                    }
                </td>
                <td>
                    @if (item.Geographic_Preferences != null && item.Geographic_Preferences.ToString().Length != 0)
                    {
                        <div style="height: 100px; overflow-y: auto;">
                            @Html.DisplayFor(modelItem => item.Geographic_Preferences)
                        </div>
                    }

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.First_Close_Investor)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Co_Invest_with_GP)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Next_12_Months_Amount_min__mn_)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Next_12_Months_Amount_max__mn_)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Next_12_Months_Amount___mn__min)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Next_12_Months_Amount___mn__max)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Next_12_Months_Number_of_Funds__min_)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Next_12_Months_Number_of_Funds__max_)
                </td>
                <td>

                    @if (item.Next_12_Months___Fund_Type_Preferences != null && item.Next_12_Months___Fund_Type_Preferences.ToString().Length != 0)
                    {
                        <div style="height: 100px; overflow-y: auto;">
                            @Html.DisplayFor(modelItem => item.Next_12_Months___Fund_Type_Preferences)
                        </div>
                    }

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date_of_12_Month_Plan)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.General_Consultants)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Private_Equity_Consultants)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AbbottPerson1.AbbottPerson1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Coinvestment.Coinvestments)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CompanyType.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstClose.FirstClose1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstTime.FirstTime1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MeetingFrequency1.MeetingFrequency1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PEInvesting.PEInvesting1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Priority1.Priority1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Region.Region1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RFPOutCome1.RFPOutCome1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SeparateAccount.SeparateAccount1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Stage1.Stage1)
                </td>

            </tr>
        }

    </table>
    
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
